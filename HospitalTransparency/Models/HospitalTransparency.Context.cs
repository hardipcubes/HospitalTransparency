//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalTransparency.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HospitalTransparencyEntities : DbContext
    {
        public HospitalTransparencyEntities()
            : base("name=HospitalTransparencyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminPanelUserMaster> AdminPanelUserMasters { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<MailSetting> MailSettings { get; set; }
        public virtual DbSet<MenuIcon> MenuIcons { get; set; }
        public virtual DbSet<MenuMaster> MenuMasters { get; set; }
        public virtual DbSet<RightsMaster> RightsMasters { get; set; }
        public virtual DbSet<RoleMaster> RoleMasters { get; set; }
        public virtual DbSet<ApplicationMaster> ApplicationMasters { get; set; }
    
        public virtual ObjectResult<Get_User_List_Result> Get_User_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_User_List_Result>("Get_User_List");
        }
    
        public virtual ObjectResult<GetMenuList_Result> GetMenuList(string searchFilter, string sortCol, string sortOrder, Nullable<int> skipRows, Nullable<int> perPage)
        {
            var searchFilterParameter = searchFilter != null ?
                new ObjectParameter("SearchFilter", searchFilter) :
                new ObjectParameter("SearchFilter", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var skipRowsParameter = skipRows.HasValue ?
                new ObjectParameter("SkipRows", skipRows) :
                new ObjectParameter("SkipRows", typeof(int));
    
            var perPageParameter = perPage.HasValue ?
                new ObjectParameter("PerPage", perPage) :
                new ObjectParameter("PerPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMenuList_Result>("GetMenuList", searchFilterParameter, sortColParameter, sortOrderParameter, skipRowsParameter, perPageParameter);
        }
    
        public virtual ObjectResult<GetRightsDetail_Result> GetRightsDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRightsDetail_Result>("GetRightsDetail");
        }
    
        public virtual ObjectResult<GetRoleList_Result> GetRoleList(string searchFilter, string sortCol, string sortOrder, Nullable<int> skipRows, Nullable<int> perPage, Nullable<int> roleId)
        {
            var searchFilterParameter = searchFilter != null ?
                new ObjectParameter("SearchFilter", searchFilter) :
                new ObjectParameter("SearchFilter", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var skipRowsParameter = skipRows.HasValue ?
                new ObjectParameter("SkipRows", skipRows) :
                new ObjectParameter("SkipRows", typeof(int));
    
            var perPageParameter = perPage.HasValue ?
                new ObjectParameter("PerPage", perPage) :
                new ObjectParameter("PerPage", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleList_Result>("GetRoleList", searchFilterParameter, sortColParameter, sortOrderParameter, skipRowsParameter, perPageParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<GetUserList_Result> GetUserList(string searchFilter, string sortCol, string sortOrder, Nullable<int> skipRows, Nullable<int> perPage, Nullable<int> roleId, Nullable<int> userId)
        {
            var searchFilterParameter = searchFilter != null ?
                new ObjectParameter("SearchFilter", searchFilter) :
                new ObjectParameter("SearchFilter", typeof(string));
    
            var sortColParameter = sortCol != null ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            var skipRowsParameter = skipRows.HasValue ?
                new ObjectParameter("SkipRows", skipRows) :
                new ObjectParameter("SkipRows", typeof(int));
    
            var perPageParameter = perPage.HasValue ?
                new ObjectParameter("PerPage", perPage) :
                new ObjectParameter("PerPage", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserList_Result>("GetUserList", searchFilterParameter, sortColParameter, sortOrderParameter, skipRowsParameter, perPageParameter, roleIdParameter, userIdParameter);
        }
    
        public virtual int Insert_ErrorLog(string uRL, string errorMessage, string stackTrace)
        {
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var stackTraceParameter = stackTrace != null ?
                new ObjectParameter("StackTrace", stackTrace) :
                new ObjectParameter("StackTrace", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_ErrorLog", uRLParameter, errorMessageParameter, stackTraceParameter);
        }
    
        public virtual ObjectResult<Sp_GetParentMenuByChildId_Result> Sp_GetParentMenuByChildId(Nullable<int> parentId, Nullable<int> roleId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetParentMenuByChildId_Result>("Sp_GetParentMenuByChildId", parentIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<Sp_MenuRightsList_Result> Sp_MenuRightsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MenuRightsList_Result>("Sp_MenuRightsList");
        }
    }
}
